/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjectRMIChat;

import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author user
 */
public class MainPage extends javax.swing.JFrame {

    IServer serverRef;
    static String local;
    IClient client;
    String gID;
    IGroup group;
    String clientID;
    String admin;
    String members;
    ClientImp cli;

    /**
     * Creates new form MainPage
     */
    public MainPage() {
        initComponents();
        if (serverRef == null) {
            try {
                serverRef = (IServer) Naming.lookup("rmi://127.0.0.1:3000/serv");
            } catch (NotBoundException ex) {
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (RemoteException ex) {
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        try {
            cli = new ClientImp(textArea);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        connBTN.setEnabled(false);
        quitBTN.setEnabled(false);
        refresh.setEnabled(false);
        chatBTN.setEnabled(false);
        grpBTN.setEnabled(false);
        brdcst.setEnabled(false);
        adminTXT.setVisible(false);
        memTXT.setVisible(false);
        removeBTN.setVisible(false);
        backBTN.setEnabled(false);
        addBTN.setVisible(false);
        rem.setVisible(false);
        add.setVisible(false);
        backBTN1.setVisible(false);
        infoBTN.setVisible(false);
        sendMSG.setEnabled(false);
        leaveBTN.setVisible(false);
        name.setText("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        subBTN = new javax.swing.JButton();
        connBTN = new javax.swing.JButton();
        quitBTN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        chatBTN = new javax.swing.JButton();
        brdcst = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        localID = new javax.swing.JTextField();
        refresh = new javax.swing.JButton();
        grpBTN = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        grpID = new javax.swing.JTextField();
        contactsChoose = new javax.swing.JComboBox<>();
        bcstMSG = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        sendMSG = new javax.swing.JTextField();
        sendBTN = new javax.swing.JButton();
        infoBTN = new javax.swing.JButton();
        name = new javax.swing.JLabel();
        backBTN = new javax.swing.JButton();
        adminTXT = new javax.swing.JLabel();
        memTXT = new javax.swing.JLabel();
        add = new javax.swing.JTextField();
        rem = new javax.swing.JTextField();
        addBTN = new javax.swing.JButton();
        removeBTN = new javax.swing.JButton();
        backBTN1 = new javax.swing.JButton();
        leaveBTN = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        subBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/subscribe.png"))); // NOI18N
        subBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subBTNActionPerformed(evt);
            }
        });

        connBTN.setBackground(new java.awt.Color(0, 153, 51));
        connBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/icons8-connect-24.png"))); // NOI18N
        connBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connBTNActionPerformed(evt);
            }
        });

        quitBTN.setBackground(new java.awt.Color(255, 0, 51));
        quitBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/quit.png"))); // NOI18N
        quitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitBTNActionPerformed(evt);
            }
        });

        jLabel1.setText("Chats");

        chatBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/icons8-chat-26.png"))); // NOI18N
        chatBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatBTNActionPerformed(evt);
            }
        });

        brdcst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/icons8-radio-waves-48.png"))); // NOI18N
        brdcst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brdcstActionPerformed(evt);
            }
        });

        jLabel2.setText("subscribe");

        jLabel3.setText("connect");

        jLabel4.setText("quit");

        jLabel5.setText("send broadcast");

        localID.setText("your ID");
        localID.setToolTipText("");

        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/refresh.png"))); // NOI18N
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        grpBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/group.png"))); // NOI18N
        grpBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grpBTNActionPerformed(evt);
            }
        });

        jLabel6.setText("new group");

        grpID.setText("Group ID");
        grpID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grpIDActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        textArea.setEnabled(false);
        jScrollPane1.setViewportView(textArea);

        sendBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/send.png"))); // NOI18N
        sendBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBTNActionPerformed(evt);
            }
        });

        infoBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/icons8-info-24.png"))); // NOI18N
        infoBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoBTNActionPerformed(evt);
            }
        });

        name.setText("jLabel1");

        backBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/back.png"))); // NOI18N
        backBTN.setIconTextGap(2);
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        adminTXT.setText("Admin: ");

        memTXT.setText("Members: ");

        add.setText("add id");

        rem.setText("remove id");

        addBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/add.png"))); // NOI18N
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        removeBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectRMIChat/remove.png"))); // NOI18N
        removeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBTNActionPerformed(evt);
            }
        });

        backBTN1.setText("Done");
        backBTN1.setIconTextGap(2);
        backBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTN1ActionPerformed(evt);
            }
        });

        leaveBTN.setBackground(new java.awt.Color(255, 0, 51));
        leaveBTN.setText("Leave Group");
        leaveBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(59, 59, 59)
                                        .addComponent(chatBTN))))
                            .addComponent(contactsChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(115, 115, 115))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bcstMSG)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(brdcst, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(grpBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(grpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))))))
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(subBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(localID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3))
                            .addComponent(connBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(name))
                    .addComponent(sendMSG)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quitBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendBTN)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(infoBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(leaveBTN))
                    .addComponent(memTXT)
                    .addComponent(adminTXT)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(removeBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rem, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backBTN1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quitBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(infoBTN)
                            .addComponent(leaveBTN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminTXT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(memTXT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(removeBTN)
                                    .addComponent(rem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)
                                .addComponent(addBTN))
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(backBTN1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sendBTN))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(localID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(subBTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(connBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addComponent(backBTN, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(name)
                                .addGap(20, 20, 20)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(sendMSG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(contactsChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bcstMSG, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(brdcst)
                                            .addComponent(grpBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(20, 20, 20))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(chatBTN)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addComponent(grpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subBTNActionPerformed
        local = localID.getText().trim();
        quitBTN.setEnabled(true);
        connBTN.setEnabled(true);
        localID.setEnabled(false);
        try {
            serverRef.subscribe(local);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Exception:" + ex.getMessage());
        quitBTN.setEnabled(false);
        connBTN.setEnabled(false);
        localID.setEnabled(true);
        localID.setText("Your ID");
        }

    }//GEN-LAST:event_subBTNActionPerformed

    private void quitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitBTNActionPerformed
        try {
            serverRef.disconnect(local);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        leaveBTN.setVisible(false);
        backBTN1.setVisible(false);
        backBTN.setEnabled(false);
        sendMSG.setEnabled(false);
        grpID.setEnabled(false);
        infoBTN.setVisible(false);
        bcstMSG.setEnabled(false);
        subBTN.setEnabled(true);
        connBTN.setEnabled(false);
        quitBTN.setEnabled(false);
        refresh.setEnabled(false);
        chatBTN.setEnabled(false);
        grpBTN.setEnabled(false);
        brdcst.setEnabled(false);
        localID.setText("Your ID");
        localID.setEnabled(true);
        textArea.setText("");
        contactsChoose.removeAllItems();
        grpID.setText("Group ID");
        grpID.setEnabled(false);
        adminTXT.setVisible(false);
        memTXT.setVisible(false);
        removeBTN.setVisible(false);
        rem.setVisible(false);
        addBTN.setVisible(false);
        add.setVisible(false);
    }//GEN-LAST:event_quitBTNActionPerformed

    private void connBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connBTNActionPerformed

        contactsChoose.removeAllItems();
        String contacts;
        try {
            serverRef.connect(local, cli);
            contacts = serverRef.getAllClients();
            String c = contacts.substring(1, contacts.length() - 1);
            String[] cont = c.split(",");
            for (int i = 0; i < cont.length; i++) {
                cont[i] = cont[i].trim();
                if (cont[i].equals(local)) {
                    i++;
                } else {
                    contactsChoose.addItem(cont[i]);
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        quitBTN.setEnabled(true);
        connBTN.setEnabled(false);
        subBTN.setEnabled(false);
        refresh.setEnabled(true);
        chatBTN.setEnabled(true);
        grpBTN.setEnabled(true);
        brdcst.setEnabled(true);
        grpID.setEnabled(true);
    }//GEN-LAST:event_connBTNActionPerformed

    private void chatBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatBTNActionPerformed

        clientID = contactsChoose.getSelectedItem().toString();
        refresh.setEnabled(false);
        backBTN.setEnabled(true);
        chatBTN.setEnabled(false);
        grpBTN.setEnabled(false);
        brdcst.setEnabled(false);
        bcstMSG.setEnabled(false);
        name.setText(clientID);
        String groups;
        try {
            groups = serverRef.getGroups();
            String grps = groups.substring(1, groups.length() - 1);
            if (grps.contains(clientID)) {
                infoBTN.setVisible(true);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        sendMSG.setEnabled(true);
    }//GEN-LAST:event_chatBTNActionPerformed

    private void grpBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grpBTNActionPerformed
        boolean grpCreated = true;
        try {
            group = new GroupImp(textArea);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        gID = grpID.getText().trim();
        grpID.setText("Group ID");
        try {
            serverRef.createGroup(gID, local, group);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            grpCreated = false;
            System.out.println("Exception:" + ex.getMessage());
        }
        if (grpCreated) {
            grpID.setEnabled(false);
            brdcst.setEnabled(false);
            backBTN.setEnabled(true);
            bcstMSG.setEnabled(false);
            refresh.setEnabled(false);
            chatBTN.setEnabled(false);
            grpBTN.setEnabled(false);
            brdcst.setEnabled(false);
            name.setText(gID);
            sendMSG.setEnabled(true);
            infoBTN.setVisible(true);
        } else {
            grpID.setText("Group ID");
        }
    }//GEN-LAST:event_grpBTNActionPerformed

    private void brdcstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brdcstActionPerformed
        try {
            serverRef.broadcast(bcstMSG.getText(), local);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        bcstMSG.setText("");
    }//GEN-LAST:event_brdcstActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        try {
            contactsChoose.removeAllItems();
            String contacts = serverRef.getAllClients();
            String c = contacts.substring(1, contacts.length() - 1);
            String groups = serverRef.getGroups();
            String grps = groups.substring(1, groups.length() - 1);
            String[] g = grps.split(",");
            String[] cont = c.split(",");
            for (int i = 0; i < cont.length; i++) {
                cont[i] = cont[i].trim();
                if (!cont[i].equals(local)) {
                    contactsChoose.addItem(cont[i]);
                }
            }
            if (g.length != 0) {
                for (int j = 0; j < g.length; j++) {
                    g[j] = g[j].trim();
                    String members = serverRef.getGrpMembers(g[j]);
                    String[] m = members.split(",");
                    for (int k = 0; k < m.length; k++) {
                        m[k] = m[k].trim();
                        if (m[k].equals(local)) {
                            contactsChoose.addItem(g[j]);
                        }
                    }

                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshActionPerformed

    private void grpIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grpIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grpIDActionPerformed

    private void sendBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBTNActionPerformed
        String message = "from " + local + " " + sendMSG.getText();
        clientID = name.getText().trim();
        boolean msgOK = true;
       String groups;
        try {
            groups = serverRef.getGroups();
            String grps = groups.substring(1, groups.length() - 1);
            if (grps.contains(clientID)) {
            gID = clientID;
            try {
                serverRef.sendToGroup(message, gID, local);
            } catch (RemoteException ex) {
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
                msgOK = false;
                System.out.println("Exception:" + ex.getMessage());
            }
        } else {
            try {
                serverRef.sendToClient(message, clientID);
            } catch (RemoteException ex) {
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        if (msgOK) {
            textArea.append("\n" + sendMSG.getText() + "<< to " + clientID);
            sendMSG.setText("");
        }
    }//GEN-LAST:event_sendBTNActionPerformed

    private void infoBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoBTNActionPerformed
        gID = name.getText();
        admin = "";
        adminTXT.setVisible(true);
        memTXT.setVisible(true);
        backBTN1.setVisible(true);
        rem.setText("remove id");
        add.setText("add id");
        leaveBTN.setVisible(true);
        try {
            members = serverRef.getGrpMembers(gID);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        memTXT.setText("members: " + members);
        try {
            admin = serverRef.getAdmin(gID);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (local.equals(admin)) {
            leaveBTN.setText("Detele Group");
            adminTXT.setText("admin: you");
            removeBTN.setVisible(true);
            addBTN.setVisible(true);
            rem.setVisible(true);
            add.setVisible(true);
        } else {
            leaveBTN.setText("Leave Group");
            removeBTN.setVisible(false);
            addBTN.setVisible(false);
            rem.setVisible(false);
            add.setVisible(false);
            adminTXT.setText("admin: " + admin);
        }
    }//GEN-LAST:event_infoBTNActionPerformed

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        try {
            serverRef.addClient(add.getText().trim(), gID);
            members = serverRef.getGrpMembers(gID);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Exception:" + ex.getMessage());
        }
        memTXT.setText("members: " + members);
    }//GEN-LAST:event_addBTNActionPerformed

    private void removeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBTNActionPerformed
        String gID = name.getText().trim();
        try {
            serverRef.removeClient(rem.getText().trim(), gID);
            members = serverRef.getGrpMembers(gID);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Exception:" + ex.getMessage());
        }
        memTXT.setText("members: " + members);
    }//GEN-LAST:event_removeBTNActionPerformed

    private void backBTN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTN1ActionPerformed
        leaveBTN.setVisible(false);
        adminTXT.setVisible(false);
        memTXT.setVisible(false);
        removeBTN.setVisible(false);
        addBTN.setVisible(false);
        rem.setVisible(false);
        add.setVisible(false);
        backBTN1.setVisible(false);
    }//GEN-LAST:event_backBTN1ActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed

        try {
            cli = new ClientImp(textArea);
        } catch (RemoteException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        name.setText("");
        backBTN1.setVisible(false);
        backBTN.setEnabled(false);
        quitBTN.setEnabled(true);
        connBTN.setEnabled(false);
        subBTN.setEnabled(false);
        refresh.setEnabled(true);
        chatBTN.setEnabled(true);
        grpBTN.setEnabled(true);
        brdcst.setEnabled(true);
        sendMSG.setEnabled(false);
        grpID.setEnabled(true);
        infoBTN.setVisible(false);
        bcstMSG.setEnabled(true);

    }//GEN-LAST:event_backBTNActionPerformed

    private void leaveBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveBTNActionPerformed
        String gID = name.getText().trim();
        name.setText("");
        if (leaveBTN.getText().equals("Leave Group")) {
            try {
                serverRef.removeClient(local, gID);
            } catch (RemoteException ex) {
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                serverRef.deleteGroup(gID);
            } catch (RemoteException ex) {
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        backBTN1.setVisible(false);
        backBTN.setEnabled(false);
        quitBTN.setEnabled(true);
        connBTN.setEnabled(false);
        subBTN.setEnabled(false);
        refresh.setEnabled(true);
        chatBTN.setEnabled(true);
        grpBTN.setEnabled(true);
        brdcst.setEnabled(true);
        sendMSG.setEnabled(false);
        grpID.setEnabled(true);
        infoBTN.setVisible(false);
        bcstMSG.setEnabled(true);
        addBTN.setVisible(false);
        removeBTN.setVisible(false);
        add.setVisible(false);
        rem.setVisible(false);
        leaveBTN.setVisible(false);
        adminTXT.setVisible(false);
        memTXT.setVisible(false);
    }//GEN-LAST:event_leaveBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainPage().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField add;
    private javax.swing.JButton addBTN;
    private javax.swing.JLabel adminTXT;
    private javax.swing.JButton backBTN;
    private javax.swing.JButton backBTN1;
    private javax.swing.JTextField bcstMSG;
    private javax.swing.JButton brdcst;
    private javax.swing.JButton chatBTN;
    private javax.swing.JButton connBTN;
    private javax.swing.JComboBox<String> contactsChoose;
    private javax.swing.JButton grpBTN;
    private javax.swing.JTextField grpID;
    private javax.swing.JButton infoBTN;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leaveBTN;
    private javax.swing.JTextField localID;
    private javax.swing.JLabel memTXT;
    private javax.swing.JLabel name;
    private javax.swing.JButton quitBTN;
    private javax.swing.JButton refresh;
    private javax.swing.JTextField rem;
    private javax.swing.JButton removeBTN;
    private javax.swing.JButton sendBTN;
    private javax.swing.JTextField sendMSG;
    private javax.swing.JButton subBTN;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables

}
